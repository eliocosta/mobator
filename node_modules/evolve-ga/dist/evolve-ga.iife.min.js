var EvolveGA=function(n){"use strict";function t(n,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function e(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function o(n){return function(n){if(Array.isArray(n)){for(var t=0,e=new Array(n.length);t<n.length;t++)e[t]=n[t];return e}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var i={fitnessFunction:function(){return 0},selectionFunction:function(n){return n.sort(function(n,t){return t.fitness-n.fitness}).slice(0,Math.ceil(n.length/2))},crossOverFunction:function(n){for(var t=[],e=0;e<n.length;e++){var i=Math.floor(Math.random()*n[e].genes.length),r=n[Math.floor(Math.random()*n.length)],a=n[Math.floor(Math.random()*n.length)];t[e]={fitness:0,genes:[].concat(o(r.genes.slice(0,i)),o(a.genes.slice(i)))}}return t},mutationFunction:function(n,t){var e=o(n.genes),i=Math.floor(Math.random()*e.length),r=t.filter(function(n){return n!==e[i]});return e[i]=r[Math.floor(Math.random()*r.length)],{fitness:n.fitness,genes:e}},populationSize:1e4,chromosomeLength:100,possibleGenes:[0,1,2,3],mutationChance:.1},r=function(){function n(t){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),e(this,"config",void 0),e(this,"population",void 0),this.config=function(n){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{},i=Object.keys(o);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(o).filter(function(n){return Object.getOwnPropertyDescriptor(o,n).enumerable}))),i.forEach(function(t){e(n,t,o[t])})}return n}({},i,t),this.population=[]}var r,a,c;return r=n,(a=[{key:"run",value:function(){0===this.population.length?this.createInitialPopulation():this.createNewGeneration(this.population);for(var n=0;n<this.population.length;n++)this.population[n].fitness=this.config.fitnessFunction(this.population[n]);return o(this.population)}},{key:"resetPopulation",value:function(){this.population=[]}},{key:"createInitialPopulation",value:function(){var n=this;this.population=o(Array(this.config.populationSize)).map(function(){return{fitness:0,genes:o(Array(n.config.chromosomeLength)).map(function(){return n.config.possibleGenes[Math.floor(Math.random()*n.config.possibleGenes.length)]})}})}},{key:"createNewGeneration",value:function(n){for(var t=this.config.selectionFunction(n),e=this.config.crossOverFunction(t),i=0;i<e.length;i++)this.config.mutationChance>=Math.random()&&(e[i]=this.config.mutationFunction(e[i],this.config.possibleGenes));this.population=[].concat(o(t),o(e))}}])&&t(r.prototype,a),c&&t(r,c),n}();return n.GeneticAlgorithm=r,n.evolve=function(n){return new r(n)},n}({});
